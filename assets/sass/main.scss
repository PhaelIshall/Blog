@import 'libs/vars';
@import 'libs/functions';
@import 'libs/mixins';
@import 'libs/vendor';
@import 'libs/breakpoints';
@import 'libs/html-grid';
@import 'fontawesome-all.min.css';
@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,600,400italic,600italic|Roboto+Slab:400,700');

/*
	Editorial by HTML5 UP
	html5up.net | @ajlkn
	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
*/
$numDots: 20
$parentWidthBase: 0.8
$parentWidth: $parentWidthBase * 100vw
$parentMaxWidth: 1000px
$dotWidth: 25px
$active: #2C3E50
$inactive: #AEB6BF

html
	height: 100%
body
	min-height: 100%
body
	font-family: 'Quicksand', sans-serif
	font-weight: 500
	color: #424949
	background-color: #ECF0F1
	padding: 0 25px
	display: flex
	flex-direction: column
	position: relative
h1
	text-align: center
	height: 38px
	margin: 60px 0
	span
		white-space: nowrap
.flex-parent
	display: flex
	flex-direction: column
	justify-content: center
	align-items: center
	width: 100%
	height: 100%
	min-height: 500px
.input-flex-container
	display: flex
	justify-content: space-around
	align-items: center
	flex-wrap: wrap
	width: $parentWidth
	max-width: $parentMaxWidth
	position: relative
	z-index: 0
	margin-left: calc((#{$parentWidth} - #{$dotWidth}) / #{$numDots}) //make up for offset of .dot-info
input
	width: $dotWidth
	height: $dotWidth
	background-color: $active
	position: relative
	border-radius: 50%
	display: block
	-moz-appearance: none
	-webkit-appearance: none
	appearance: none
	cursor: pointer
	&:focus
		outline: none
	&::before, &::after
		content: ''
		display: block
		position: absolute
		z-index: -1
		top: 50%
		transform: translateY(-50%)
		background-color: $active
		width: $parentWidth / $numDots
		height: 5px
		max-width: $parentMaxWidth / $numDots
	&::before
		left: calc(#{-$parentWidth / $numDots} + #{$dotWidth / 2})
	&::after
		right: calc(#{-$parentWidth / $numDots} + #{$dotWidth / 2})
	&:checked
		background-color: $active
		&::before
			background-color: $active
		&::after
			background-color: $inactive
	&:checked
		~ input
			&, &::before, &::after
				background-color: $inactive
		+ .dot-info
			span
				font-size: 13px
				font-weight: bold	

.dot-info
	width: $dotWidth
	height: $dotWidth
	display: block
	// background-color: red
	visibility: hidden
	position: relative
	z-index: -1
	//position each span on top of the dot immediately before it; -1px at the end is just fudging the numbers for rounding error
	left: calc((((#{$parentWidth} - #{$dotWidth}) / #{$numDots}) * -1) - 1px)
	span
		visibility: visible
		position: absolute
		font-size: 12px
		&.year
			bottom: -30px
			left: 50%
			transform: translateX(-50%)
		&.label
			top: -65px
			left: 0
			transform: rotateZ(-45deg)
			width: 70px
			text-indent: -10px

#timeline-descriptions-wrapper
	width: 100%
	margin-top: 140px
	font-size: 22px
	font-weight: 400
	margin-left: calc((-#{$parentWidth} - #{$dotWidth}) / #{$numDots}) //make up for offset of .dot-info
	p
		margin-top: 0
		display: none


// magic shenanigans
$descriptions: '1910', '1920', '1930', '1940', '1950', '1960', '1970', '1980', '1990', '2000'

@each $desc in $descriptions
	input[data-description="#{$desc}"]:checked ~ #timeline-descriptions-wrapper
		p[data-description="#{$desc}"]
			display: block




@media (min-width: $parentMaxWidth / $parentWidthBase)
	.input-flex-container
		margin-left: #{($parentMaxWidth / $numDots) + ($dotWidth / 2)}
	input
		&::before
			left: #{-($parentMaxWidth / $numDots) + ($dotWidth / 2)}
		&::after
			right: #{-($parentMaxWidth / $numDots) + ($dotWidth / 2)}
	.dot-info
		left: calc((((#{$parentMaxWidth} - #{$dotWidth}) / #{$numDots}) * -1) - 1px)
	#timeline-descriptions-wrapper
		margin-left: #{-($parentMaxWidth / $numDots) + ($dotWidth / 2)}
	

@media (max-width: 630px)
	.flex-parent
		justify-content: initial
	.input-flex-container
		flex-wrap: wrap
		justify-content: center
		width: 400px
		height: auto
		margin-top: 15vh
		margin-left: 0
		padding-bottom: 30px
	input, .dot-info
		width: 60px
		height: 60px
		margin: 0 10px 50px
	input
		background-color: transparent !important
		z-index: 1
		&::before, &::after
			content: none
		&:checked
			+ .dot-info
				background-color: $active
				span
					&.year
						font-size: 14px
					&.label
						font-size: 12px
	.dot-info
		visibility: visible
		border-radius: 50%
		z-index: 0 // position behind input, so input remains clickable
		left: 0
		margin-left: -70px
		background-color: $inactive
		span
			&.year
				top: 0
				left: 0
				transform: none
				width: 100%
				height: 100%
				display: flex
				justify-content: center
				align-items: center
				color: #ECF0F1
			&.label
				top: calc(100% + 5px)
				left: 50%
				transform: translateX(-50%)
				text-indent: 0
				text-align: center
	#timeline-descriptions-wrapper
		margin-top: 30px
		margin-left: 0
		text-align: center

@media (max-width: 480px)
	.input-flex-container
		width: 340px

@media (max-width: 400px)
	.input-flex-container
		width: 300px
	
// Breakpoints.

	@include breakpoints((
		xlarge:   ( 1281px,  1680px ),
		large:    ( 981px,   1280px ),
		medium:   ( 737px,   980px  ),
		small:    ( 481px,   736px  ),
		xsmall:   ( 361px,   480px  ),
		xxsmall:  ( null,    360px  ),
		xlarge-to-max:    '(min-width: 1681px)',
		small-to-xlarge:  '(min-width: 481px) and (max-width: 1680px)'
	));

// Base.

	@import 'base/reset';
	@import 'base/page';
	@import 'base/typography';

// Component.

	@import 'components/row';
	@import 'components/section';
	@import 'components/form';
	@import 'components/box';
	@import 'components/icon';
	@import 'components/image';
	@import 'components/list';
	@import 'components/actions';
	@import 'components/icons';
	@import 'components/contact';
	@import 'components/pagination';
	@import 'components/table';
	@import 'components/button';
	@import 'components/mini-posts';
	@import 'components/features';
	@import 'components/posts';

// Layout.

	@import 'layout/wrapper';
	@import 'layout/main';
	@import 'layout/sidebar';
	@import 'layout/header';
	@import 'layout/banner';
	@import 'layout/footer';
	@import 'layout/menu';
